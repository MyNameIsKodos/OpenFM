buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.4"
  }
}

// for people who want stable
plugins {
    id "net.minecraftforge.gradle.forge" version "2.0.2"
}
apply plugin: "com.matthewprenger.cursegradle"

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenCentral()
    maven {
        name = "OC repo"
        url = "http://maven.cil.li/"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}


dependencies {
    compile "li.cil.oc:OpenComputers:MC1.8-1.5.+:dev"
	shade "javazoom:jlayer:1.0.1"
	shade "com.squareup.okhttp:okhttp:2.5.0"
	shade "com.googlecode.soundlibs:tritonus-share:0.3.7-2"
	compile "com.googlecode.soundlibs:mp3spi:1.9.5-1"
	compile "com.googlecode.soundlibs:vorbisspi:1.0.3-1"
}

if (System.getenv().BUILD_NUMBER != null)
	ext.buildNumber = System.getenv().BUILD_NUMBER?.toInteger()
else
	ext.buildNumber = 0

version = "0.1.0"
group = "pcl.OpenFM"
archivesBaseName = "OpenFM-1.8"

minecraft {
    version = "1.8-11.14.4.1563"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20141130"
	replace "@VERSION@", project.version
	replace "@BUILD@", project.ext.buildNumber
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

jar.classifier = "${ext.buildNumber}"
jar.manifest = manifest { attributes(
	"FMLCorePlugin": "pcl.OpenFM.misc.OFMDepLoader",
	"FMLCorePluginContainsFMLMod": "icanhazfmlmodpweeze"
) }
def curseforge_key = 0
def curse_changlog = "default"
if (project.hasProperty('opensecurity_curseforge_key')) {
	curseforge_key = project.opensecurity_curseforge_key
	curse_changlog = project.changelog
}

curseforge {
	apiKey = curseforge_key
	project {
		id = "236839"
		releaseType = "release"
		changelog = curse_changlog
	}
}

processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version + "." + project.ext.buildNumber, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

// this is needed for IntelliJ so we don't have to copy over the assets manually every time
idea {
    module {
        outputDir = file('build/classes/main')
    }
}